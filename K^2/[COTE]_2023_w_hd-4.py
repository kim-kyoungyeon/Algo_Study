"""
일꾼이 1초에 n원씩 벌어올떄
경매 n 
1초당 5w
10초 50w
완탐 불가
n 개의 경매마다 - 살건이 안살건지
2 ^n 
조건 n = 3000 
dp 로 접근시 
dp[i] i 번째 물건을 마지막 구매
총 가치 최대값
dp[1]=10 / 가격 60 / 0 구매
dp[2]= 15 / 가격30  / 0 구매
dp[3] = 20 80  // 100소득 - 80 
dp[4] = 30 40 // 150 소득 -40/ 80가능  = 120 
dp[5 ] =  150 가능

1 10 60
2 15 30
3 20 80  - 선택
4 30 40  - 선택
5 35 70
6 40 20


"""
import sys
si = sys.stdin.readline
n, m = map(int, si().split())
a = [[0, 0]] + [list(map(int, si().split())) for _ in range(n)]
a.sort(key=lambda x:x[0])
dp = [0 for _ in range(n + 1)]
# 1번째 경매부터 차레로 봅시다

for i in range(1, n + 1):
    # 1. i 번째 납품을 선택하지 않는 경우
    #dp[i] = dp[i - 1]
    
    # 2. i 번째 납품을 선택하는 경우
    for j in range(i):
        # 2-1. 그 직전에 마지막 납품이 j 번째 납품일 경우
        if a[i][0] * m - dp[j] >= a[i][1]:
            dp[i] = max(dp[i], dp[j] + a[i][1])
print(max(dp))

'''
6 5
10 60
15 30
20 80
30 40
35 70
40 20
=>
170
4 5
7 35
5 25
3 15
1 5
=>
35
5 4
33 39
16 50
50 17
61 39
92 22
=>
167
'''